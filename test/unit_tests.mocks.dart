// Mocks generated by Mockito 5.3.2 from annotations
// in searchack/test/unit_tests.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:searchack/models/hack_model.dart' as _i5;
import 'package:searchack/services/auth_service.dart' as _i6;
import 'package:searchack/services/hack_service.dart' as _i4;
import 'package:searchack/services/image_service.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ImageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageService extends _i1.Mock implements _i2.ImageService {
  @override
  _i3.Future<String?> getImage() => (super.noSuchMethod(
        Invocation.method(
          #getImage,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
        returnValueForMissingStub: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);
}

/// A class which mocks [HackService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHackService extends _i1.Mock implements _i4.HackService {
  @override
  _i3.Future<List<_i5.Hackathon>> getHacks() => (super.noSuchMethod(
        Invocation.method(
          #getHacks,
          [],
        ),
        returnValue: _i3.Future<List<_i5.Hackathon>>.value(<_i5.Hackathon>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.Hackathon>>.value(<_i5.Hackathon>[]),
      ) as _i3.Future<List<_i5.Hackathon>>);
}

/// A class which mocks [AuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationService extends _i1.Mock
    implements _i6.AuthenticationService {
  @override
  _i3.Stream<_i7.User?> get authStateChanges => (super.noSuchMethod(
        Invocation.getter(#authStateChanges),
        returnValue: _i3.Stream<_i7.User?>.empty(),
        returnValueForMissingStub: _i3.Stream<_i7.User?>.empty(),
      ) as _i3.Stream<_i7.User?>);
  @override
  _i3.Future<bool> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> signUp({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
